{% set name = "mne-python" %}
{% set version = "1.1dev0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  git_url: https://github.com/mne-tools/mne-python.git
  git_depth: 1
  git_rev: main

build:
  number: 20220619

outputs:
  - name: mne-base
    build:
      noarch: python
      script: python -m pip install --no-deps . -vv
      entry_points:
        - mne = mne.commands.utils:main

    requirements:
      host:
        - python >=3.7
        - pip
      run:
        - python >=3.7
        - setuptools
        - matplotlib-base >=3.1.0
        - numpy >=1.18.1
        - scipy >=1.4.1
        - pooch >=1.5
        - tqdm
        - decorator
        - packaging
        - jinja2

    test:
      requires:
        - pip
      imports:
        - mne
      commands:
        - pip check
        - mne --version

  - name: mne
    requirements:
      run:
        - {{ pin_subpackage('mne-base', max_pin="x.x.x.x") }}
        - pyobjc-framework-cocoa  # [osx]  # for setting Dock icons etc.
        - matplotlib >=3.1.0
        - seaborn
        - jupyter
        - h5io
        - pymatreader
        - h5py
        - dipy
        - nibabel
        - nilearn
        - pandas >=0.23.4
        - xlrd
        - scikit-learn >=0.20.2
        - python-picard
        - numba
        - vtk >=9.0.1
        - pyvista >=0.32
        - pyvistaqt >=0.4
        - statsmodels
        - numexpr
        - pyqt
        - pillow
        - joblib
        - psutil
        - mffpy >=0.5.7
        - imageio >=2.6.1
        - imageio-ffmpeg >=0.4.1
        - traitlets
        - mne-qt-browser
        - ipywidgets
        - ipyvtklink
        - edflib-python
        - eeglabio

    test:
      requires:
        - pip
      imports:
        - mne
      commands:
        - pip check
        - mne --version

  - name: mne-installer-menus
    requirements:
      build:
        - sed
      host:
        - python >=3.7
      run:
        - python >=3.7
        - mne-base

    build:
      skip: True  # [not linux]
      noarch: python
      script:
        - mkdir -p "{{ PREFIX }}/Menu"

        # Common
        - sed "s/__PKG_VERSION__/{{ PKG_VERSION }}/" "{{ RECIPE_DIR }}/menu/menu.json" > "{{ PREFIX }}/Menu/mne.json"

        # Spyder
        - cp "{{ RECIPE_DIR }}/menu/spyder.icns" "{{ PREFIX }}/Menu/mne_spyder.icns"
        - cp "{{ RECIPE_DIR }}/menu/spyder.ico" "{{ PREFIX }}/Menu/mne_spyder.ico"
        - cp "{{ RECIPE_DIR }}/menu/spyder.png" "{{ PREFIX }}/Menu/mne_spyder.png"

        # Console
        - cp "{{ RECIPE_DIR }}/menu/console.icns" "{{ PREFIX }}/Menu/mne_console.icns"
        - cp "{{ RECIPE_DIR }}/menu/console.ico" "{{ PREFIX }}/Menu/mne_console.ico"
        - cp "{{ RECIPE_DIR }}/menu/console.png" "{{ PREFIX }}/Menu/mne_console.png"
        # Use hash as separator, as PREFIX contains forward slashes!
        - sed "s#__PREFIX__#{{ PREFIX }}#" "{{ RECIPE_DIR }}/menu/open_prompt.applescript" > "{{ PREFIX }}/Menu/mne_open_prompt.applescript"  # for macOS
        - sed "s#__PREFIX__#{{ PREFIX }}#" "{{ RECIPE_DIR }}/menu/open_prompt.sh" > "{{ PREFIX }}/Menu/mne_open_prompt.sh"                    # for Linux
        - sed "s#__PREFIX__#{{ PREFIX }}#" "{{ RECIPE_DIR }}/menu/open_prompt.bat" > "{{ PREFIX }}/Menu/mne_open_prompt.bat"                  # for Windows

        # System info
        - cp "{{ RECIPE_DIR }}/menu/info.icns" "{{ PREFIX }}/Menu/mne_info.icns"
        - cp "{{ RECIPE_DIR }}/menu/info.ico" "{{ PREFIX }}/Menu/mne_info.ico"
        - cp "{{ RECIPE_DIR }}/menu/info.png" "{{ PREFIX }}/Menu/mne_info.png"
        - cp "{{ RECIPE_DIR }}/menu/mne_sys_info.py" "{{ PREFIX }}/Menu/mne_sys_info.py"

        # Website
        - cp "{{ RECIPE_DIR }}/menu/web.icns" "{{ PREFIX }}/Menu/mne_web.icns"
        - cp "{{ RECIPE_DIR }}/menu/web.ico" "{{ PREFIX }}/Menu/mne_web.ico"
        - cp "{{ RECIPE_DIR }}/menu/web.png" "{{ PREFIX }}/Menu/mne_web.png"

        # Forum
        - cp "{{ RECIPE_DIR }}/menu/forum.icns" "{{ PREFIX }}/Menu/mne_forum.icns"
        - cp "{{ RECIPE_DIR }}/menu/forum.ico" "{{ PREFIX }}/Menu/mne_forum.ico"
        - cp "{{ RECIPE_DIR }}/menu/forum.png" "{{ PREFIX }}/Menu/mne_forum.png"

        # Folder icon for macOS
        - cp "{{ RECIPE_DIR }}/menu/mne.png" "{{ PREFIX }}/Menu/mne.png"

    test:
      commands:
        - test -f ${CONDA_PREFIX}/Menu/mne.json
        - test -f ${CONDA_PREFIX}/Menu/mne_sys_info.py
        - test -f ${CONDA_PREFIX}/Menu/mne_open_prompt.applescript
        - test -f ${CONDA_PREFIX}/Menu/mne_open_prompt.sh
        - test -f ${CONDA_PREFIX}/Menu/mne_open_prompt.bat
        # Check we didn't forget any icons
        - test `ls ${CONDA_PREFIX}/Menu/mne_spyder.*  | wc -l` -eq 3
        - test `ls ${CONDA_PREFIX}/Menu/mne_console.* | wc -l` -eq 3
        - test `ls ${CONDA_PREFIX}/Menu/mne_info.*    | wc -l` -eq 3
        - test `ls ${CONDA_PREFIX}/Menu/mne_web.*     | wc -l` -eq 3
        - test `ls ${CONDA_PREFIX}/Menu/mne_forum.*   | wc -l` -eq 3
        - test -f ${CONDA_PREFIX}/Menu/mne.png

about:
  home: http://mne.tools
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: MNE-Python is a software for MEG and EEG data analysis.
  description: |
    The main package for MNE-Python is named `mne` in conda-forge and should
    be suitable for most users. The conda recipe produces the following:

    - `mne`: should be installed for full functionality including 3D visualization.
    - `mne-base`: only pulls dependencies for basic functionality and 2D visualization.
    - `mne-installer-menus`: should not be installed manually, as it is only meant to be used by the standalone installers.
  doc_url: http://mne.tools
  dev_url: https://github.com/mne-tools/mne-python

extra:
  recipe-maintainers:
    - larsoner
    - christianbrodbeck
    - hoechenberger
